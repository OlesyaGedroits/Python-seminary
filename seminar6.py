# Задача №39. Даны два массива чисел. Требуется вывести те элементы первого массива (в том порядке, в каком они идут в первом
# массиве), которых нет во втором массиве. Пользователь вводит число N - количество элементов в первом массиве, затем N
# чисел - элементы массива. Затем число M - количество элементов во втором массиве. Затем элементы второго массива. 
#(каждое число вводится с новой строки)
# пример ввода:
# 7
# 3 1 3 4 2 4 12
# 6
# 4 15 43 1 15 1
# Вывод:
# 3 3 2 12
from random import randint
# def spisoc(x):
#     l=[]
#     for i in range(x):
#         #i=int(input("Введите число: "))
#         i=randint(0, 20)
#         l.append(i)
#     return l


# #N=int(input("Введите длину 1ого массива: "))
# mass1=spisoc(int(input("Введите длину 1ого массива: ")))
# mass2=spisoc(int(input("Введите длину 2ого массива: ")))
# print(mass1, '\n',mass2, '\n', sep='')
# mass3=[x for x in mass1 if x not in mass2]
# print(*mass3, end=' ')




# Задача №41. Дан массив, состоящий из целых чисел. Напишите программу, которая в данном массиве определит
# количество элементов, у которых два соседних и, при этом, оба соседних элемента меньше данного. Сначала
# вводится число N — количество элементов в массиве 
# Далее записаны N чисел — элементы массива. Массив состоит из целых чисел.
# Ввод: 
# 5
# 1 5 1 5 1
# Вывод:
# 2

# def spisok(n):
#     return [randint(-20, 20) for i in range(n)]

# def sravni_soseda(l):
#     count=0
#     for i in range(1, len(l)-1):
#         if l[i-1]<l[i]>l[i+1]:
#             count+=1
#     return count

# N=int(input('Введите количество элементов: '))
# print(spisok(N), '\n', sravni_soseda(spisok(N)), sep='')



# Задача №43. Дан список чисел. Посчитайте, сколько в нем пар элементов, равных друг другу. Считается, что любые
# два элемента, равные друг другу образуют одну пару, которую необходимо посчитать. Вводится список чисел.
# Все числа списка находятся на разных строках.
# Ввод:
# 1 2 3 2 3
# Вывод:
# 2

# def spisok(n):
#     return[int(input(f'Введите число {a+1}: ')) for a in range(n)]


# def find_pair(l):
#     x=0
#     for i in set(l):
#         x+=l.count(i)//2
#     return x

# N=int(input('Введите количество элементов: '))
# list1=spisok(N)
# print(find_pair(list1))


# Задача №45. Два различных натуральных числа n и m называются дружественными, если сумма делителей числа n
# (включая 1, но исключая само n) равна числу m и наоборот. Например, 220 и 284 – дружественные числа. По данному числу
# k выведите все пары дружественных чисел, каждое из которых не превосходит k. Программа получает на вход одно натуральное
# число k, не превосходящее 100 000. Программа должна вывести все пары дружественных чисел, каждое из которых не превосходит k. 
# Пары необходимо выводить по одной в строке, разделяя пробелами. Каждая пара должна быть выведена только один раз (перестановка
# чисел новую пару не дает).
# Ввод:  Вывод:
# 300    220 284


def sum_div (n: int): #вычисляет все делители числа до его половины (т.е. уникальные)
    sum=1
    for i in range(2, n//2+1):
        if n%i==0:
            sum+=i
    return sum

def friendly_num (k: int):  #вычисляет пары в диапозоне k, сумма делителей которых равна друг другу
    
    for i in range(2, k):
        j=sum_div(i)
        if sum_div(j)==i and i<j<k:
            print(i, j)


friendly_num(int(input('Введите диапозон: ')))








